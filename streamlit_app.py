# -*- coding: utf-8 -*-
"""streamlit_app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1l0lOJ9c3Ipo7agi_5QsHQtHQg4KmZ1iS
"""
# Este código está pensado para usarse en entorno local con Streamlit
# pero incluye todo para que lo puedas modificar/testear en Google Colab también

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import random

# Configuración general
st.set_page_config(page_title="ElectroHouse Dashboard", layout="wide")

# Simular datos ficticios
np.random.seed(42)
regiones = ['Centro', 'Norte', 'Sur', 'Cuyo', 'NEA', 'NOA', 'Patagonia']
canales = ['Online', 'Retail', 'Mayorista']
categorias = ['Electrodomésticos', 'Tecnología', 'Herramientas', 'Iluminación', 'Climatización']
fechas = pd.date_range(start='2024-01-01', periods=100)

df = pd.DataFrame({
    'Fecha': random.choices(fechas, k=100),
    'ID_Venta': [f"V{1000+i}" for i in range(100)],
    'Cliente': [f"Cliente_{i}" for i in range(100)],
    'Región': np.random.choice(regiones, 100),
    'Producto': [f"Producto_{i%10}" for i in range(100)],
    'Categoría': np.random.choice(categorias, 100),
    'Cantidad': np.random.randint(1, 10, 100),
    'Precio_Unitario': np.random.randint(5000, 30000, 100),
    'Canal_Venta': np.random.choice(canales, 100)
})

df['Ingreso'] = df['Cantidad'] * df['Precio_Unitario']
df['Costo_Unitario'] = df['Precio_Unitario'] * np.random.uniform(0.5, 0.8, 100)
df['Margen_Bruto'] = df['Ingreso'] - (df['Costo_Unitario'] * df['Cantidad'])

# Sidebar branding personal
with st.sidebar:
    st.title("Jesica Gimenez")
    st.markdown("[🔗 Portfolio](https://portfolio-jesica-gimenez.vercel.app/)")
    st.markdown("[💼 LinkedIn](https://www.linkedin.com/in/jesica-gimenez/)")
    st.markdown("---")
    st.write("Dashboard de ventas con datos segmentados por región, canal y categorías.")

# Filtros
st.header("Filtros")
col1, col2 = st.columns(2)
region = col1.selectbox("Región", ["Todas"] + df["Región"].unique().tolist())
canal = col2.selectbox("Canal de Venta", ["Todos"] + df["Canal_Venta"].unique().tolist())

# Aplicar filtros
df_filtrado = df.copy()
if region != "Todas":
    df_filtrado = df_filtrado[df_filtrado["Región"] == region]
if canal != "Todos":
    df_filtrado = df_filtrado[df_filtrado["Canal_Venta"] == canal]

# KPIs
st.markdown("## Métricas Clave")
kpi1, kpi2, kpi3 = st.columns(3)
kpi1.metric("Total Ingresos", f"${df_filtrado['Ingreso'].sum():,.0f}")
kpi2.metric("Ventas Totales", df_filtrado["ID_Venta"].nunique())
kpi3.metric("Margen Bruto", f"${df_filtrado['Margen_Bruto'].sum():,.0f}")

# Gráfico de ventas por categoría
st.markdown("## Ventas por Categoría")
fig, ax = plt.subplots()
df_filtrado.groupby("Categoría")["Ingreso"].sum().sort_values().plot(kind="barh", ax=ax, color="skyblue")
st.pyplot(fig)

# Tabla de datos
st.markdown("## Vista de Datos")
st.dataframe(df_filtrado)
